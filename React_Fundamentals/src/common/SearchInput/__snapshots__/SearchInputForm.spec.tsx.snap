// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SearchInput component is renderer 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <form>
        <fieldset>
          <legend>
            Search Input
          </legend>
          <input
            aria-label="search-input"
            id="search-input"
            placeholder="Search"
            type="search"
          />
        </fieldset>
      </form>
      <form>
        <label
          for="immediate"
        >
          immediate
        </label>
        <input
          data-testid="immediate"
          id="immediate"
          name="mode"
          type="radio"
        />
        <label
          for="withDelay"
        >
          withDelay
        </label>
        <input
          data-testid="withDelay"
          id="withDelay"
          name="mode"
          type="radio"
        />
        <label
          for="onPress"
        >
          onPress
        </label>
        <input
          data-testid="onPress"
          id="onPress"
          name="mode"
          type="radio"
        />
      </form>
      <p>
        word
      </p>
      <p>
        noun
      </p>
      <p>
        hello
      </p>
      <p>
        world
      </p>
    </div>
  </body>,
  "container": <div>
    <form>
      <fieldset>
        <legend>
          Search Input
        </legend>
        <input
          aria-label="search-input"
          id="search-input"
          placeholder="Search"
          type="search"
        />
      </fieldset>
    </form>
    <form>
      <label
        for="immediate"
      >
        immediate
      </label>
      <input
        data-testid="immediate"
        id="immediate"
        name="mode"
        type="radio"
      />
      <label
        for="withDelay"
      >
        withDelay
      </label>
      <input
        data-testid="withDelay"
        id="withDelay"
        name="mode"
        type="radio"
      />
      <label
        for="onPress"
      >
        onPress
      </label>
      <input
        data-testid="onPress"
        id="onPress"
        name="mode"
        type="radio"
      />
    </form>
    <p>
      word
    </p>
    <p>
      noun
    </p>
    <p>
      hello
    </p>
    <p>
      world
    </p>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`SearchInputForm component input should be work with Immediate options 1`] = `
<DocumentFragment>
  <form>
    <fieldset>
      <legend>
        Search Input
      </legend>
      <input
        aria-label="search-input"
        id="search-input"
        placeholder="Search"
        type="search"
      />
    </fieldset>
  </form>
  <form>
    <label
      for="immediate"
    >
      immediate
    </label>
    <input
      data-testid="immediate"
      id="immediate"
      name="mode"
      type="radio"
    />
    <label
      for="withDelay"
    >
      withDelay
    </label>
    <input
      data-testid="withDelay"
      id="withDelay"
      name="mode"
      type="radio"
    />
    <label
      for="onPress"
    >
      onPress
    </label>
    <input
      data-testid="onPress"
      id="onPress"
      name="mode"
      type="radio"
    />
  </form>
  <p>
    word
  </p>
  <p>
    world
  </p>
</DocumentFragment>
`;

exports[`SearchInputForm component input should be work with Immediate options currently 1`] = `
<DocumentFragment>
  <form>
    <fieldset>
      <legend>
        Search Input
      </legend>
      <input
        aria-label="search-input"
        id="search-input"
        placeholder="Search"
        type="search"
      />
    </fieldset>
  </form>
  <form>
    <label
      for="immediate"
    >
      immediate
    </label>
    <input
      data-testid="immediate"
      id="immediate"
      name="mode"
      type="radio"
    />
    <label
      for="withDelay"
    >
      withDelay
    </label>
    <input
      data-testid="withDelay"
      id="withDelay"
      name="mode"
      type="radio"
    />
    <label
      for="onPress"
    >
      onPress
    </label>
    <input
      data-testid="onPress"
      id="onPress"
      name="mode"
      type="radio"
    />
  </form>
  <p>
    word
  </p>
  <p>
    world
  </p>
</DocumentFragment>
`;

exports[`SearchInputForm component input should be work with withDelay options currently 1`] = `
<DocumentFragment>
  <form>
    <fieldset>
      <legend>
        Search Input
      </legend>
      <input
        aria-label="search-input"
        id="search-input"
        placeholder="Search"
        type="search"
      />
    </fieldset>
  </form>
  <form>
    <label
      for="immediate"
    >
      immediate
    </label>
    <input
      data-testid="immediate"
      id="immediate"
      name="mode"
      type="radio"
    />
    <label
      for="withDelay"
    >
      withDelay
    </label>
    <input
      data-testid="withDelay"
      id="withDelay"
      name="mode"
      type="radio"
    />
    <label
      for="onPress"
    >
      onPress
    </label>
    <input
      data-testid="onPress"
      id="onPress"
      name="mode"
      type="radio"
    />
  </form>
  <p>
    word
  </p>
  <p>
    noun
  </p>
  <p>
    hello
  </p>
  <p>
    world
  </p>
</DocumentFragment>
`;

exports[`SearchInputForm component renders corrently 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <form>
        <fieldset>
          <legend>
            Search Input
          </legend>
          <input
            aria-label="search-input"
            id="search-input"
            placeholder="Search"
            type="search"
          />
        </fieldset>
      </form>
      <form>
        <label
          for="immediate"
        >
          immediate
        </label>
        <input
          data-testid="immediate"
          id="immediate"
          name="mode"
          type="radio"
        />
        <label
          for="withDelay"
        >
          withDelay
        </label>
        <input
          data-testid="withDelay"
          id="withDelay"
          name="mode"
          type="radio"
        />
        <label
          for="onPress"
        >
          onPress
        </label>
        <input
          data-testid="onPress"
          id="onPress"
          name="mode"
          type="radio"
        />
      </form>
      <p>
        word
      </p>
      <p>
        noun
      </p>
      <p>
        hello
      </p>
      <p>
        world
      </p>
    </div>
  </body>,
  "container": <div>
    <form>
      <fieldset>
        <legend>
          Search Input
        </legend>
        <input
          aria-label="search-input"
          id="search-input"
          placeholder="Search"
          type="search"
        />
      </fieldset>
    </form>
    <form>
      <label
        for="immediate"
      >
        immediate
      </label>
      <input
        data-testid="immediate"
        id="immediate"
        name="mode"
        type="radio"
      />
      <label
        for="withDelay"
      >
        withDelay
      </label>
      <input
        data-testid="withDelay"
        id="withDelay"
        name="mode"
        type="radio"
      />
      <label
        for="onPress"
      >
        onPress
      </label>
      <input
        data-testid="onPress"
        id="onPress"
        name="mode"
        type="radio"
      />
    </form>
    <p>
      word
    </p>
    <p>
      noun
    </p>
    <p>
      hello
    </p>
    <p>
      world
    </p>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
